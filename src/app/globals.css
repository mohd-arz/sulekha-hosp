@tailwind base;
@tailwind components;
@tailwind utilities;

@keyframes countUp {
  from {
    opacity: 0;
    transform: translateY(50%);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.text-count-animation {
  animation: countUp 1s ease-out; /* Adjust the duration and timing function as needed */
}


/* Hide scrollbar for Chrome, Safari, and Opera */
.container::-webkit-scrollbar {
  width: 0;
}

/* Hide scrollbar for IE, Edge, and Firefox */
.container {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}
.custom-scroll::-webkit-scrollbar {
  display: none;
}
.custom-scroll {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */

}
.custom-scrollbar::-webkit-scrollbar {
  width: 4px;
  cursor: pointer;

}

.custom-scrollbar::-webkit-scrollbar-track {
  background-color: rgba(229, 231, 235, 1); /* Assuming full opacity for simplicity */
  cursor: pointer;
}

.custom-scrollbar::-webkit-scrollbar-thumb {
  cursor: pointer;
  background-color: #a0aec0;
}
@media (max-width: 768px) {
  .flex-col {
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
  }
  
  .flex-col li {
    margin: 5px; /* Adjust margin as needed */
  }
}

.icon {
  @apply relative overflow-hidden;
}

.icon::before {
  content: '';
  position: absolute;
  top: 0;
  left: -125%;
  width:15%;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.4);
  transform: skewX(-45deg);
  transition: left 400ms ease-out;
}

.icon:hover::before {
  left: 180%;
}

.green-bullet::before {
  content: '';
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  width: 6px;
  height: 6px;
  background-color: rgb(7, 207, 7);
  border-radius: 50%;

}
/* :root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
} */
/* CSS */
/* CSS */
/* CSS */
/* CSS */
/* CSS */
